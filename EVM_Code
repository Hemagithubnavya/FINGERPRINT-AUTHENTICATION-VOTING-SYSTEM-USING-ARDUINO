// Arduino code to enroll a fingerprint 
uint8_t readnumber(void) 
{
 uint8_t num = 0; 
while (num == 0) 
{
 while (! Serial.available());
 num = Serial.parseInt();
 }
 return num;
 }
 uint8_t getFingerprintEnroll() 
{
 int p = -1;
 Serial.print("Waiting for valid finger to enroll as #"); 
Serial.println(id);
 while (p != FINGERPRINT_OK) {
 p = finger.getImage();
 switch (p)
 {
 case FINGERPRINT_OK: Serial.println("Image taken");
 break;
 case FINGERPRINT_NOFINGER: Serial.println(".");
 break;
 case FINGERPRINT_PACKETRECIEVEERR: Serial.println("Communication error");
 break;
 case FINGERPRINT_IMAGEFAIL: Serial.println("Imaging error");
 break;
 default: Serial.println("Unknown error");
 break;
 }
 }
 // OK success!

 // Method  for Verification
 int getFingerprintIDez() 
{
 uint8_t p = finger.getImage();
 if (p != FINGERPRINT_OK)  return -1;
 p = finger.image2Tz();
 if (p != FINGERPRINT_OK)  return -1;
 p = finger.fingerFastSearch();
 if (p != FINGERPRINT_OK)  return -1;
 // found a match!
 Serial.print("Found ID #");
 Serial.print(finger.fingerID);
 Serial.print(" with confidence of ");
 Serial.println(finger.confidence);
 return finger.fingerID;
 }
 // Method  for Voting
 void loop()                     
{
 vote_taken = 0;
 lcd.clear();
 lcd.setCursor(0, 0);  
// run over and over again
 lcd.print("Please place your");
 lcd.setCursor(0,1);
 lcd.print("finger");
 delay(100);
 id = getFingerprintIDez();
 if(id > 0)
 {
 // Clear the display buffer
 lcd.clear();
 // Set cursor (Column, Row)
 lcd.setCursor(0, 0);  
lcd.print("Your Voter ID");
 lcd.setCursor(0,1);
 27
lcd.print(id);
 delay(2000);
 if(id == 4)
 {
 if((party_1_count > party_2_count) && ((party_1_count > party_3_count)))
 {
 winner_name = "BJP";
 }
 else if((party_2_count > party_1_count) && ((party_2_count > party_3_count)))
 {
 winner_name = "NCP";
 }
 else
 {
 winner_name = "Congress";
 }
 lcd.clear();
 lcd.setCursor(0, 0);  
lcd.print("winner party");
 lcd.setCursor(0,1);
 lcd.print(winner_name);
 while(1);
 }
 if(previous_voter_id != id)
 {
 do
 {
 lcd.clear();
 lcd.setCursor(0, 0);  
lcd.print("Give Your vote");
 lcd.setCursor(0,1);
 lcd.print("Press Button");
 delay(500);
 previous_voter_id = id;
 buttonState1 = digitalRead(buttonPin1);
 delay(10);
 buttonState2 = digitalRead(buttonPin2);
 delay(10);
 28
buttonState3 = digitalRead(buttonPin3);
 delay(10);
 if (buttonState1 == HIGH)
 {
 party_1_count = party_1_count +1;
 vote_taken = 1;
 }
 else if(buttonState2 == HIGH)
 {
 party_2_count = party_2_count +1;
 vote_taken = 1;
 }
 else if(buttonState3 == HIGH)
 {
 party_3_count = party_3_count +1;
 vote_taken = 1;
 }
 else
 {
 vote_taken = 0;
 }
 if(vote_taken == 1)
 {
 lcd.clear();
 lcd.setCursor(0, 0);  
lcd.print("Thanks for your");
 lcd.setCursor(0,1);
 lcd.print("vote");
 delay(200);  
digitalWrite(buzzer, HIGH);      
delay(1000);                              
digitalWrite(buzzer, LOW);     
delay(1000);
 }
 } while(vote_taken == 0);
 }
 else
 {
 29
lcd.clear();
 lcd.setCursor(0, 0);  
lcd.print("Duplicate Vote");
 lcd.setCursor(0,1);
 lcd.print("buzzer on");
 delay(2000);
 digitalWrite(buzzer, HIGH);   
delay(1000);                           
digitalWrite(buzzer, LOW);     
delay(1000);
 digitalWrite(buzzer, HIGH);    
delay(1000);                             
digitalWrite(buzzer, LOW);     
delay(1000);
 digitalWrite(buzzer, HIGH);    
delay(1000);                             
digitalWrite(buzzer, LOW);     
delay(1000);
 }
 }
 }


